###############################################################################################################
#    pyBarcoAudit   Copyright (C) <2020-22>  <Kevin Scott>                                                    #
#                                                                                                             #
#     history.txt                                                                                             #
#                                                                                                             #
###############################################################################################################
#    Copyright (C) <2020-22>  <Kevin Scott>                                                                   #
#                                                                                                             #
#    This program is free software: you can redistribute it and/or modify it under the terms of the           #
#    GNU General Public License as published by the Free Software Foundation, either Version 3 of the         #
#    License, or (at your option) any later Version.                                                          #
#                                                                                                             #
#    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without        #
#    even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the               #
#    GNU General Public License for more details.                                                             #
#                                                                                                             #
#    You should have received a copy of the GNU General Public License along with this program.               #
#    If not, see <http://www.gnu.org/licenses/>.                                                              #
#                                                                                                             #
###############################################################################################################

V2022.8

    Corrected a bug.  The percent values where using total monitors instead of live monitors.
    Increased MAX_ROW to 1321.


V2022.7

    Corrected two bugs.
        The logger was not being passed into monitor_utils, so an error crashed the app.
        A blank field (monitor) crashed the print statement in the results print.

V2022.6

    Finished the logic for scanning the spreadsheet and collating the number of monitors
    in calibration date and displaying data by overall number, by site and by model.
    Re-structured the main file, so that all related function now reside in their own modules.
    Seems to be working okay.

V2022.5

    Created directories logs & src and moved relevant files.
    Brought source up to date.


V2022.4

    Woke up project again, it needs to be finished because I need to use it.
    Tested against python 3.10


V2020.3

    dataClasses.py
        Added two new classes to hold the breakdown totals for site and model.
    pyBarcoAudit.py
        Added stuff to scan and print results for sites and models.
        Just total for now, which don't add up.  They will :-)
        Added a check for common errors i.e. a monitor having no site or model information.
        Correct a bug if there was not ppm due date.


V2020.2.be1ca3e

    Added dataClasses.py which hold two dataclasses, one to hold monitor info and one to hold results.
    Added dataMapping.py which hold constants.  These are edges of the data table and column headers.
    pyBarcoAudit.py
        Added the logic for scanWorkBook, parseMonitors & print Results.
        Will now scan the spreadsheet and report on number live, scrapped & failed monitors.
        Will also report on number on monitors in and out of date.


V2020.1.e6cb24c

    The program will scan a Excel spreadsheet of calibration dates and produce a usage report.
    Mainly an exercise in using openpyxl.
    Main outline of program completes [mainly copies form another :-)]
    Will parse and validate initial arguments.
    Will loop through spreadsheet and print rows



